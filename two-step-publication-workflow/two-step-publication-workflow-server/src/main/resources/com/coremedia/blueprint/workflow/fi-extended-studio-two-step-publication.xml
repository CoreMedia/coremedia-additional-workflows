<?xml version="1.0" encoding="iso-8859-1"?>

<!--
          Extended version of CoreMedia Two Step Publication Workflow for Studio
-->
<Workflow>
  <Process name="StudioTwoStepPublication" description="studio-two-step-publication"
           startTask="AssignUser">

    <Rights>
      <Grant group="administratoren" rights="read, write, create, start, suspend, resume, abort"/>
      <Grant group="composer-role" rights="read, write, create, start, suspend, resume, abort"/>
      <Grant group="approver-role" rights="read, write"/>
      <Grant group="publisher-role" rights="read"/>
      <!-- SALESDEMO: Additional groups for fine-grained control -->
      <Grant group="wf--two-step-publication--abort" rights="abort"/>
      <Grant group="wf--two-step-publication--create" rights="create"/>
      <Grant group="wf--two-step-publication--read" rights="read"/>
      <Grant group="wf--two-step-publication--resume" rights="resume"/>
      <Grant group="wf--two-step-publication--start" rights="start"/>
      <Grant group="wf--two-step-publication--suspend" rights="suspend"/>
      <Grant group="wf--two-step-publication--write" rights="write"/>
    </Rights>

    <Variable name="subject" type="String"/>
    <Variable name="comment" type="String"/>
    <AggregationVariable name="assignedUsers_Approve" type="User"/>
    <AggregationVariable name="assignedGroups_Approve" type="Group"/>
    <AggregationVariable name="changeSet" type="Resource"/>
    <AggregationVariable name="comments" type="String"/>

    <Variable name="changeSetLockedInStudio" type="Boolean">
      <Boolean value="true"/>
    </Variable>
    <Variable name="contentNotLockedForPerformerOfTasks" type="String">
      <String value="Compose,Approve"/>
    </Variable>
    <Variable name="nextSelectedTask" type="String"/>
    <Variable name="publicationSuccessful" type="Boolean">
      <Boolean value="false"/>
    </Variable>
    <Variable name="approvalSuccessful" type="Boolean">
      <Boolean value="false"/>
    </Variable>
    <AggregationVariable name="publicationResultResources" type="Resource"/>
    <AggregationVariable name="publicationResultCodes" type="Integer"/>
    <AggregationVariable name="publicationResultVersions" type="Integer"/>
    <AggregationVariable name="publicationResultParams" type="String"/>

    <InitialAssignment>
      <Writes variable="subject"/>
      <Writes variable="comment"/>
      <Writes variable="changeSet"/>
      <Writes variable="comments"/>
      <Writes variable="assignedUsers_Approve"/>
      <Writes variable="assignedGroups_Approve"/>
    </InitialAssignment>

    <Assignment>
      <Reads variable="subject"/>
      <Reads variable="comment"/>
      <Reads variable="changeSet"/>
      <Reads variable="comments"/>
      <Reads variable="assignedUsers_Approve"/>
      <Reads variable="assignedGroups_Approve"/>
    </Assignment>

    <AutomatedTask name="AssignUser"
                   description="assignuser-task" successor="CheckEmptyChangeSet">
      <Action class="ExcludeUser" task="Approve" userVariable="OWNER_"/>
      <Action class="RegisterPendingProcess" userVariable="OWNER_"/>
    </AutomatedTask>

    <If name="CheckEmptyChangeSet">
      <Condition>
        <IsEmpty variable="changeSet"/>
      </Condition>
      <Then successor="Finish"/>
      <Else successor="PreApprove"/>
    </If>
    <!-- approve all items before going to review task -->
    <AutomatedTask name="PreApprove" successor="CheckApproval">
      <Action class="ApproveResource" gui="true"
                   resourceVariable="changeSet"
                   successVariable="approvalSuccessful"
                   ignoreErrors="true"
                   timeout="180"
                   userVariable="OWNER_">
      </Action>
    </AutomatedTask>

    <If name="CheckApproval">
      <Condition>
        <Get variable="approvalSuccessful"/>
      </Condition>
      <Then successor="Approve"/>
      <Else successor="Compose"/>
    </If>

    <UserTask name="Approve"
              description="studio-two-step-publication-approve-task"
              successor="PublishOrCompose" reexecutable="true">
      <Performers policyClass="com.coremedia.cap.workflow.plugin.AssignableResourcePermissionsPerformersPolicy"
                  assignedUsersVariable="assignedUsers_Approve"
                  assignedGroupsVariable="assignedGroups_Approve"
                  rights="approve, publish"/>
      <Rights>
        <Grant group="administratoren" rights="read, accept, cancel, delegate, reject"/>
        <Grant group="approver-role" rights="read, accept, cancel, delegate, reject"/>
      </Rights>

      <Assignment>
        <Writes variable="assignedUsers_Approve"/>
        <Writes variable="assignedGroups_Approve"/>
        <Reads variable="subject"/>
        <Writes variable="comment"/>
        <Reads description="approve-changeSet" variable="changeSet" contentEditable="false"/>
        <Writes variable="comments"/>
        <Reads variable="publicationResultCodes"/>
        <Writes variable="nextSelectedTask"/>
      </Assignment>

      <ExitAction class="ExcludePerformer" task="Compose"/>
      <ExitAction class="ForceUser" task="Publish"/>
      <ExitAction class="RegisterPendingProcess"/>
    </UserTask>

    <If name="PublishOrCompose">
      <Condition>
        <Equal>
          <String value="Compose"/>
          <Get variable="nextSelectedTask"/>
        </Equal>
      </Condition>
      <Then successor="Compose"/>
      <Else successor="Publish"/>
    </If>

    <UserTask name="Publish"
              description="studio-two-step-publication-publish-task"
              successor="CheckPublication" reexecutable="true" autoAccepted="true" autoCompleted="true">
      <Rights>
        <Grant group="administratoren" rights="read, accept, cancel, delegate, reject"/>
        <Grant group="approver-role" rights="read, accept, cancel, delegate, reject"/>
      </Rights>

      <Assignment>
        <Reads variable="subject"/>
        <Reads variable="comment"/>
        <Reads description="publish-changeSet" variable="changeSet" contentEditable="false"/>
        <Reads variable="comments"/>
      </Assignment>

      <EntryAction class="PublishResources" gui="true"
                   resourceVariable="changeSet"
                   resultVariable="publicationResultResources"
                   versionVariable="publicationResultVersions"
                   codeVariable="publicationResultCodes"
                   parameterVariable="publicationResultParams"
                   successVariable="publicationSuccessful" ignoreErrors="false"
                   ignorePublicationErrors="true" timeout="600"
                   userVariable="PERFORMER_"/>
    </UserTask>

    <If name="CheckPublication">
      <Condition>
        <Get variable="publicationSuccessful"/>
      </Condition>
      <Then successor="Finish"/>
      <Else successor="Compose"/>
    </If>

    <UserTask name="Compose"
              description="studio-two-step-publication-compose-task"
              successor="CheckEmptyChangeSet" reexecutable="true">
      <Performers policyClass="com.coremedia.cap.workflow.plugin.ResourcePermissionsPerformersPolicy"
                  rights="write"/>
      <Rights>
        <Grant group="administratoren" rights="read, accept, skip"/>
        <Grant group="composer-role" rights="read, accept"/>
        <Grant group="approver-role" rights="read, skip"/>
      </Rights>

      <Assignment>
        <Writes variable="subject"/>
        <Writes variable="comment"/>
        <Writes variable="changeSet" contentEditable="true"/>
        <Writes variable="comments"/>
        <Writes variable="assignedUsers_Approve"/>
        <Writes variable="assignedGroups_Approve"/>
        <Reads variable="publicationResultCodes"/>
      </Assignment>

      <ExitAction class="ExcludePerformer" task="Approve"/>
      <ExitAction class="RegisterPendingProcess"/>
    </UserTask>

    <AutomatedTask name="Finish" final="true">
      <Action class="AssignVariable" resultVariable="changeSetLockedInStudio">
        <Boolean value="false"/>
      </Action>
    </AutomatedTask>

    <!-- Finally, make sure finished processes are archived and appear in the list of finished workflows for
         participating users, i.e. for users for whom the RegisterPendingProcess action was called. -->
    <FinalAction class="ArchiveProcessFinalAction" maxProcessesPerUser="100"/>

  </Process>
</Workflow>
