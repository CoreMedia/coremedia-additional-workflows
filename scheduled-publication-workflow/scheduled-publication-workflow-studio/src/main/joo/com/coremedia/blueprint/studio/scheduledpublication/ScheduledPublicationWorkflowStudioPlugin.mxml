<?xml version="1.0" encoding="UTF-8"?>
<editor:StudioPlugin
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns="exml:ext.config"
        xmlns:exml="http://www.jangaroo.net/exml/0.8"
        xmlns:collab="exml:com.coremedia.cms.editor.controlroom.config"
        xmlns:editor="exml:com.coremedia.cms.editor.sdk.config">
  <fx:Metadata>
    [ResourceBundle('com.coremedia.blueprint.studio.scheduledpublication.ScheduledPublicationWorkflow')]
  </fx:Metadata>
  <fx:Script><![CDATA[
    import com.coremedia.cap.common.SESSION;
    import com.coremedia.cap.content.impl.ContentRepositoryImpl;
    import com.coremedia.cap.workflow.ProcessPropertyNames;
    import com.coremedia.cms.editor.controlroom.workflow.publication.PublicationWorkflowConstants;
    import com.coremedia.ui.data.Calendar;

    import mx.resources.ResourceManager;

    private static const SCHEDULED_PUBLICATION_WORKFLOW_TYPE:String = "StudioScheduledPublication";
    private static const SCHEDULED_TASK_NAME:String = "Schedule";
    private static const SCHEDULED_DATE_VARIABLE:String = "scheduledDate";

    private static const MILLISECONDS_FOR_ONE_DAY:Number = 86400000;

    public static const xtype:String = "com.coremedia.blueprint.studio.scheduledpublication.config.scheduledPublicationWorkflowStudioPlugin";

    public native function ScheduledPublicationWorkflowStudioPlugin(config:ScheduledPublicationWorkflowStudioPlugin = null);

    internal static function getCalendarOfTomorrow():Calendar {
      var dayDate:Date = new Date();
      var dayDateInMilliseconds:Number = dayDate.getTime();
      var tomorrowInMillieSeconds:Number = dayDateInMilliseconds + MILLISECONDS_FOR_ONE_DAY;

      var tomorrowDate:Date = new Date(tomorrowInMillieSeconds);
      return new Calendar({
        year: tomorrowDate.getFullYear(),
        month: tomorrowDate.getMonth(),
        day: tomorrowDate.getDate(),
        hour: tomorrowDate.getHours(),
        minute: tomorrowDate.getMinutes(),
        second: tomorrowDate.getSeconds(),
        offset: 0,
        timeZone: (SESSION.getConnection().getContentRepository() as ContentRepositoryImpl).getDefaultTimeZone(),
        normalized: true
      });
    }

    private function setScheduledPublicationProcessIcon(data:*):String {
      var iconCls:String;

      if (data && !data.accepted && !data.escalated && !data.withWarning
              && data.processDefinitionName === SCHEDULED_PUBLICATION_WORKFLOW_TYPE) {
        iconCls = resourceManager.getString('com.coremedia.icons.CoreIcons', 'time');
      }
      return iconCls;
    }
    ]]></fx:Script>

  <editor:configuration>
    <collab:AddPublicationWorkflowPlugin processDefinitionName="{SCHEDULED_PUBLICATION_WORKFLOW_TYPE}">
      <collab:startForm>
        <collab:DefaultStartPublicationWorkflowForm>
          <collab:additionalFields>
            <collab:WorkflowDateTimeField itemId="scheduledDatePanel"
                                          defaultTimeFunction="{getCalendarOfTomorrow}"
                                          triggerRemoteValidationOnChange="true"
                                          key="{SCHEDULED_DATE_VARIABLE}"
                                          fieldLabel="{ResourceManager.getInstance().getString('com.coremedia.blueprint.studio.scheduledpublication.ScheduledPublicationWorkflow', 'WorkflowForm_workflowDate_label')}"/>

          </collab:additionalFields>
        </collab:DefaultStartPublicationWorkflowForm>
      </collab:startForm>

      <collab:inboxForm>
        <collab:DefaultPublicationWorkflowDetailForm>
          <collab:additionalFields>
            <collab:WorkflowDateDisplayField
                    fieldLabel="{ResourceManager.getInstance().getString('com.coremedia.blueprint.studio.scheduledpublication.ScheduledPublicationWorkflow', 'WorkflowForm_workflowDate_label')}"
                    labelSeparator=":"
                    key="{SCHEDULED_DATE_VARIABLE}"/>
          </collab:additionalFields>
        </collab:DefaultPublicationWorkflowDetailForm>
      </collab:inboxForm>

      <collab:pendingForm>
        <collab:DefaultPublicationWorkflowDetailForm>
          <collab:additionalFields>
            <collab:WorkflowDateDisplayField
                    fieldLabel="{ResourceManager.getInstance().getString('com.coremedia.blueprint.studio.scheduledpublication.ScheduledPublicationWorkflow', 'WorkflowForm_workflowDate_label')}"
                    labelSeparator=":"
                    key="{SCHEDULED_DATE_VARIABLE}"/>
          </collab:additionalFields>
        </collab:DefaultPublicationWorkflowDetailForm>
      </collab:pendingForm>

      <collab:finishedForm>
        <collab:DefaultPublicationWorkflowInfoForm>
          <collab:additionalFields>
            <collab:WorkflowDateDisplayField
                    builtIn="true"
                    fieldLabel="{ResourceManager.getInstance().getString('com.coremedia.blueprint.studio.scheduledpublication.ScheduledPublicationWorkflow', 'WorkflowForm_completionDate_label')}"
                    labelSeparator=":"
                    key="{ProcessPropertyNames.COMPLETION_DATE}"/>
          </collab:additionalFields>
        </collab:DefaultPublicationWorkflowInfoForm>
      </collab:finishedForm>

      <collab:statePanel>
        <collab:WorkflowStatePanel processDefinitionName="{SCHEDULED_PUBLICATION_WORKFLOW_TYPE}"
                                   defaultCurrentTaskName="Compose">
          <collab:workflowStateTransitions>
            <collab:WorkflowStateTransition task="{PublicationWorkflowConstants.COMPOSE_TASK_NAME}"
                                            nextSteps="{[{nextStep: SCHEDULED_TASK_NAME}]}"
                                            defaultStep="{SCHEDULED_TASK_NAME}"/>
            <collab:WorkflowStateTransition task="{SCHEDULED_TASK_NAME}"
                                            nextSteps="{[{nextStep: PublicationWorkflowConstants.PUBLISH_TASK_NAME}]}"
                                            defaultStep="{PublicationWorkflowConstants.PUBLISH_TASK_NAME}"/>
            <collab:WorkflowStateTransition task="{PublicationWorkflowConstants.PUBLISH_TASK_NAME}"
                                            nextSteps="{[{nextStep: PublicationWorkflowConstants.COMPOSE_TASK_NAME}]}"
                                            defaultStep="DoPublish"/>
          </collab:workflowStateTransitions>
        </collab:WorkflowStatePanel>
      </collab:statePanel>
    </collab:AddPublicationWorkflowPlugin>
    <collab:CustomProcessIconPlugin customProcessIconFunction="{setScheduledPublicationProcessIcon}"/>
    <editor:CopyResourceBundleProperties
            destination="{ResourceManager.getInstance().getResourceBundle(null, 'com.coremedia.cms.editor.ProcessDefinitions')}"
            source="{ResourceManager.getInstance().getResourceBundle(null, 'com.coremedia.blueprint.studio.scheduledpublication.ScheduledPublicationWorkflow')}"/>
    <editor:CopyResourceBundleProperties
            destination="{ResourceManager.getInstance().getResourceBundle(null, 'com.coremedia.cms.editor.controlroom.ControlRoom')}"
            source="{ResourceManager.getInstance().getResourceBundle(null, 'com.coremedia.blueprint.studio.scheduledpublication.ScheduledPublicationWorkflow')}"/>
    <editor:CopyResourceBundleProperties
            destination="{ResourceManager.getInstance().getResourceBundle(null, 'com.coremedia.cms.editor.ErrorCodes')}"
            source="{ResourceManager.getInstance().getResourceBundle(null, 'com.coremedia.blueprint.studio.scheduledpublication.ScheduledPublicationWorkflow')}"/>
  </editor:configuration>

</editor:StudioPlugin>
